// Generated by Axe Handle MCP Server Generator
// Date: <<<%= it.it.it.it.date %> %> %>
// Version: <<<%= it.it.it.it.version %> %> %>

// DO NOT EDIT THIS FILE MANUALLY
// This file contains TypeScript type definitions for the <<<%= it.it.it.it.service.name %> %> %> service

/**
 * Error response structure for MCP errors.
 */
export interface McpErrorResponse {
  /** Error code */
  code: string;
  /** Human-readable error message */
  message: string;
  /** Additional details about the error */
  details?: Record<string, unknown>;
}

<<<% for (const type of service.types) { %>
/**
 * <<<%= it.it.it.it.type.description %> %> %>
 */
export interface <<<%= it.it.it.it.type.name %> %> %> {
<<<% for (const field of type.fields) { %>
  /**
   * <<<%= it.it.it.it.field.description %> %> %>
   */
  <<<%= it.it.it.it.field.name %> %> %><<<%= it.it.field.required %> %> ? '' : '?' %>: <<<%= it.it.it.it.field.tsType %> %> %>;
<<<% } %> %> %>
}

<<<% } %> %> %>

// Request and Response Types
<<<% for (const resource of service.resources) { %>
  <<<% for (const operation of resource.operations) { %>
    <% if (operation.name === 'Get') { %>
/**
 * Request parameters for getting a <<<%= it.it.it.it.resource.name %> %> %> by ID.
 */
export interface <<<%= it.it.it.it.operation.inputType %> %> %> {
  /** ID of the <<<%= it.it.it.it.resource.name %> %> %> to retrieve */
  id: string;
}

    <<<% } %> %> else if (operation.name === 'List') { %>
/**
 * Request parameters for listing <<<%= it.it.resource.name.toLowerCase %> %>() %>s.
 */
export interface <<<%= it.it.it.it.operation.inputType %> %> %> {
  /** Maximum number of items to return (default: 20, max: 100) */
  pageSize?: number;
  /** Page token for pagination */
  pageToken?: string;
  /** Optional filter criteria */
  filter?: string;
}

/**
 * Response for listing <<<%= it.it.resource.name.toLowerCase %> %>() %>s.
 */
export interface <<<%= it.it.it.it.operation.outputType %> %> %> {
  /** List of <<<%= it.it.resource.name.toLowerCase %> %>() %>s */
  <<<%= it.it.resource.name.toLowerCase %> %>() %>s: <<<%= it.it.it.it.resource.name %> %> %>[];
  /** Token for retrieving the next page (if available) */
  nextPageToken?: string;
  /** Total count of <<<%= it.it.resource.name.toLowerCase %> %>() %>s matching the request */
  totalSize?: number;
}

    <<<% } %> %> else if (operation.name === 'Create') { %>
/**
 * Request parameters for creating a <<<%= it.it.it.it.resource.name %> %> %>.
 */
export interface <<<%= it.it.it.it.operation.inputType %> %> %> {
  /** <<<%= it.it.it.it.resource.name %> %> %> to create */
  <<<%= it.it.resource.name.toLowerCase %> %>() %>: Omit<<<<%= it.it.it.it.resource.name %> %> %>, 'id'>;
}

    <<<% } %> %> else if (operation.name === 'Update') { %>
/**
 * Request parameters for updating a <<<%= it.it.it.it.resource.name %> %> %>.
 */
export interface <<<%= it.it.it.it.operation.inputType %> %> %> {
  /** ID of the <<<%= it.it.it.it.resource.name %> %> %> to update */
  id: string;
  /** Updated <<<%= it.it.it.it.resource.name %> %> %> data */
  <<<%= it.it.resource.name.toLowerCase %> %>() %>: Partial<<<<%= it.it.it.it.resource.name %> %> %>>;
}

    <<<% } %> %> else if (operation.name === 'Delete') { %>
/**
 * Request parameters for deleting a <<<%= it.it.it.it.resource.name %> %> %>.
 */
export interface <<<%= it.it.it.it.operation.inputType %> %> %> {
  /** ID of the <<<%= it.it.it.it.resource.name %> %> %> to delete */
  id: string;
}

/**
 * Response for deleting a <<<%= it.it.it.it.resource.name %> %> %>.
 */
export interface <<<%= it.it.it.it.operation.outputType %> %> %> {
  /** ID of the deleted <<<%= it.it.it.it.resource.name %> %> %> */
  id: string;
  /** Whether the <<<%= it.it.it.it.resource.name %> %> %> was successfully deleted */
  success: boolean;
}
    <<<% } %> %> %>
  <<<% } %> %> %>

<<<% } %> %> %>