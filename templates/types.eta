// Generated by Axe Handle MCP Server Generator
// Date: <%= date %>
// Version: <%= version %>

// DO NOT EDIT THIS FILE MANUALLY
// This file contains TypeScript type definitions for the <%= service.name %> service

/**
 * Error response structure for MCP errors.
 */
export interface McpErrorResponse {
  /** Error code */
  code: string;
  /** Human-readable error message */
  message: string;
  /** Additional details about the error */
  details?: Record<string, unknown>;
}

<% for (const type of service.types) { %>
/**
 * <%= type.description %>
 */
export interface <%= type.name %> {
<% for (const field of type.fields) { %>
  /**
   * <%= field.description %>
   */
  <%= field.name %><%= field.required ? '' : '?' %>: <%= field.tsType %>;
<% } %>
}

<% } %>

// Request and Response Types
<% for (const resource of service.resources) { %>
  <% for (const operation of resource.operations) { %>
    <% if (operation.name === 'Get') { %>
/**
 * Request parameters for getting a <%= resource.name %> by ID.
 */
export interface <%= operation.inputType %> {
  /** ID of the <%= resource.name %> to retrieve */
  id: string;
}

    <% } else if (operation.name === 'List') { %>
/**
 * Request parameters for listing <%= resource.name.toLowerCase() %>s.
 */
export interface <%= operation.inputType %> {
  /** Maximum number of items to return (default: 20, max: 100) */
  pageSize?: number;
  /** Page token for pagination */
  pageToken?: string;
  /** Optional filter criteria */
  filter?: string;
}

/**
 * Response for listing <%= resource.name.toLowerCase() %>s.
 */
export interface <%= operation.outputType %> {
  /** List of <%= resource.name.toLowerCase() %>s */
  <%= resource.name.toLowerCase() %>s: <%= resource.name %>[];
  /** Token for retrieving the next page (if available) */
  nextPageToken?: string;
  /** Total count of <%= resource.name.toLowerCase() %>s matching the request */
  totalSize?: number;
}

    <% } else if (operation.name === 'Create') { %>
/**
 * Request parameters for creating a <%= resource.name %>.
 */
export interface <%= operation.inputType %> {
  /** <%= resource.name %> to create */
  <%= resource.name.toLowerCase() %>: Omit<<%= resource.name %>, 'id'>;
}

    <% } else if (operation.name === 'Update') { %>
/**
 * Request parameters for updating a <%= resource.name %>.
 */
export interface <%= operation.inputType %> {
  /** ID of the <%= resource.name %> to update */
  id: string;
  /** Updated <%= resource.name %> data */
  <%= resource.name.toLowerCase() %>: Partial<<%= resource.name %>>;
}

    <% } else if (operation.name === 'Delete') { %>
/**
 * Request parameters for deleting a <%= resource.name %>.
 */
export interface <%= operation.inputType %> {
  /** ID of the <%= resource.name %> to delete */
  id: string;
}

/**
 * Response for deleting a <%= resource.name %>.
 */
export interface <%= operation.outputType %> {
  /** ID of the deleted <%= resource.name %> */
  id: string;
  /** Whether the <%= resource.name %> was successfully deleted */
  success: boolean;
}
    <% } %>
  <% } %>

<% } %>