# <<<%= it.it.it.it.service.name %> %> %> API Documentation

> Generated by Axe Handle MCP Server Generator - <<<%= it.it.it.it.date %> %> %>

## Overview

This document describes the API for the <<<%= it.it.it.it.service.name %> %> %> service, which implements the Model Context Protocol (MCP).

## Base URL

```
http://localhost:3000
```

## Resources

<<<% for (const resource of service.resources) { %>
### <<<%= it.it.it.it.resource.name %> %> %>

<<<%= it.it.it.it.resource.description %> %> %>

#### Resource Structure

```typescript
{
<<<% for (const field of resource.fields) { %>
  // <<<%= it.it.it.it.field.description %> %> %>
  "<<<%= it.it.it.it.field.name %> %> %>"<<<%= it.it.field.required %> %> ? '' : '?' %>: <<<%= it.it.it.it.field.tsType %> %> %>,
<<<% } %> %> %>
}
```

#### Operations

<<<% for (const operation of resource.operations) { %>
##### <<<%= it.it.it.it.operation.description %> %> %>

```
<<<%= it.it.it.it.operation.httpMethod %> %> %> <<<%= it.it.it.it.operation.route %> %> %>
```

<% if (operation.name === 'Get') { %>
**Path Parameters:**

- `id` (string, required): ID of the <<<%= it.it.it.it.resource.name %> %> %> to retrieve

**Response:**

```typescript
// On success (200 OK)
{
<<<% for (const field of resource.fields) { %>
  "<<<%= it.it.it.it.field.name %> %> %>"<<<%= it.it.field.required %> %> ? '' : '?' %>: <<<%= it.it.it.it.field.tsType %> %> %>,
<<<% } %> %> %>
}

// On error (4xx/5xx)
{
  "code": string,      // Error code (e.g., "MCP-4004")
  "message": string,   // Human-readable error message
  "details"?: object   // Additional error details
}
```

<<<% } %> %> else if (operation.name === 'List') { %>
**Query Parameters:**

- `pageSize` (number, optional): Maximum number of items to return (default: 20, max: 100)
- `pageToken` (string, optional): Page token for pagination
- `filter` (string, optional): Filter criteria

**Response:**

```typescript
// On success (200 OK)
{
  "<<<%= it.it.resource.name.toLowerCase %> %>() %>s": [
    {
<<<% for (const field of resource.fields) { %>
      "<<<%= it.it.it.it.field.name %> %> %>"<<<%= it.it.field.required %> %> ? '' : '?' %>: <<<%= it.it.it.it.field.tsType %> %> %>,
<<<% } %> %> %>
    },
    // ...
  ],
  "nextPageToken"?: string,  // Token for retrieving the next page
  "totalSize"?: number       // Total count of <<<%= it.it.resource.name.toLowerCase %> %>() %>s matching the request
}

// On error (4xx/5xx)
{
  "code": string,      // Error code (e.g., "MCP-4000")
  "message": string,   // Human-readable error message
  "details"?: object   // Additional error details
}
```

<<<% } %> %> else if (operation.name === 'Create') { %>
**Request Body:**

```typescript
{
  "<<<%= it.it.resource.name.toLowerCase %> %>() %>": {
<<<% for (const field of resource.fields.filter(f => f.name !== 'id')) { %>
    "<<<%= it.it.it.it.field.name %> %> %>"<<<%= it.it.field.required %> %> ? '' : '?' %>: <<<%= it.it.it.it.field.tsType %> %> %>,
<<<% } %> %> %>
  }
}
```

**Response:**

```typescript
// On success (201 Created)
{
<<<% for (const field of resource.fields) { %>
  "<<<%= it.it.it.it.field.name %> %> %>"<<<%= it.it.field.required %> %> ? '' : '?' %>: <<<%= it.it.it.it.field.tsType %> %> %>,
<<<% } %> %> %>
}

// On error (4xx/5xx)
{
  "code": string,      // Error code (e.g., "MCP-4000")
  "message": string,   // Human-readable error message
  "details"?: object   // Additional error details
}
```

<<<% } %> %> else if (operation.name === 'Update') { %>
**Path Parameters:**

- `id` (string, required): ID of the <<<%= it.it.it.it.resource.name %> %> %> to update

**Request Body:**

```typescript
{
  "<<<%= it.it.resource.name.toLowerCase %> %>() %>": {
<<<% for (const field of resource.fields.filter(f => f.name !== 'id')) { %>
    "<<<%= it.it.it.it.field.name %> %> %>"?: <<<%= it.it.it.it.field.tsType %> %> %>,  // Optional field to update
<<<% } %> %> %>
  }
}
```

**Response:**

```typescript
// On success (200 OK)
{
<<<% for (const field of resource.fields) { %>
  "<<<%= it.it.it.it.field.name %> %> %>"<<<%= it.it.field.required %> %> ? '' : '?' %>: <<<%= it.it.it.it.field.tsType %> %> %>,
<<<% } %> %> %>
}

// On error (4xx/5xx)
{
  "code": string,      // Error code (e.g., "MCP-4004")
  "message": string,   // Human-readable error message
  "details"?: object   // Additional error details
}
```

<<<% } %> %> else if (operation.name === 'Delete') { %>
**Path Parameters:**

- `id` (string, required): ID of the <<<%= it.it.it.it.resource.name %> %> %> to delete

**Response:**

```typescript
// On success (200 OK)
{
  "id": string,     // ID of the deleted <<<%= it.it.it.it.resource.name %> %> %>
  "success": boolean  // Whether the <<<%= it.it.it.it.resource.name %> %> %> was successfully deleted
}

// On error (4xx/5xx)
{
  "code": string,      // Error code (e.g., "MCP-4004")
  "message": string,   // Human-readable error message
  "details"?: object   // Additional error details
}
```
<<<% } %> %> %>

<<<% } %> %> %>

<<<% } %> %> %>

## Error Codes

The API uses the following error codes:

- `MCP-4000`: Bad Request - The request is malformed or contains invalid parameters
- `MCP-4004`: Not Found - The requested resource does not exist
- `MCP-5000`: Internal Server Error - An unexpected error occurred on the server

## Additional Notes

- All endpoints return JSON responses
- Authentication is not implemented in this generated code
- All date/time fields use ISO 8601 format (e.g., "2023-10-25T15:30:00Z")